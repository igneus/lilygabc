;; Generates the Gregorio vs. lilygabc side-by-side comparison

(use-modules
 ((gnutls) #:prefix gnutls:)
 (ice-9 getopt-long)
 (ice-9 string-fun)
 (rnrs bytevectors)
 (ice-9 rdelim)
 (ice-9 textual-ports)
 (srfi srfi-26))

(define (make-header paper)
  (string-append "\\documentclass[" paper ", 12pt]{article}
\\usepackage[left=1.5cm, right=1.5cm, top=3cm, bottom=3cm]{geometry}

\\usepackage{lyluatex}
\\usepackage{gregoriotex}

% This is a rather humbling workaround:
% the modern notation examples produce crazy vertical margins when set
% directly in a minipage, but are well-behaved in a framed/shaded
% environment. So we set them in a shaded environment with white
% (i.e. invisible) shade.
% TODO find a cleaner solution
\\usepackage{framed}
\\usepackage[usenames]{xcolor}
\\colorlet{shadecolor}{white}

\\usepackage{spverbatim}

\\gresetinitiallines{0}

\\title{lilygabc visual tests: comparison with gregorio}

\\begin{document}
\\maketitle"))

(define (item-template gabc-str filename)
  ;; lyluatex dumps the examples to temporary files in a subdirectory
  ;; and apparently chdirs in that subdirectory when running lilypond
  (let ((lyluatex-filename (string-append "../" filename))
        (gtex-filename (string-replace-substring filename ".gabc" ".gtex")))
    (string-append "% " gabc-str " ----------
\\noindent
\\begin{minipage}[t]{0.25\\textwidth}
  % gabc as text
  \\mbox{}\\vspace*{3.5mm}\\begin{spverbatim}" gabc-str "\\end{spverbatim}
\\end{minipage}
\\begin{minipage}[t]{0.25\\textwidth}
  % Gregorio
  \\mbox{}\\vspace*{2.2mm}\\gregorioscore{" gtex-filename "}
\\end{minipage}
\\begin{minipage}[t]{0.25\\textwidth}
  % lilygabc square notation
  \\mbox{}\\vspace*{6.45mm}\\begin{lilypond}
    \\include \"gregorian.ly\"
    \\include \"../../lilygabc.ily\"
    #(set-global-staff-size 33)
    \\score {
      \\gabc-vaticana-file \"" lyluatex-filename "\"
    }
  \\end{lilypond}
\\end{minipage}
\\begin{minipage}[t]{0.25\\textwidth}
  % lilygabc modern notation
  \\begin{shaded*}\\begin{lilypond}
    \\include \"../../lilygabc.ily\"
    \\score {
      \\gabc-file \"" lyluatex-filename "\"
      \\layout { \\lilygabcModernGregorianStemlessLayout }
    }
  \\end{lilypond}\\end{shaded*}
\\end{minipage}")))

(define footer "\\end{document}")

(define (make-title str)
  (string-append "\\section*{" str "}\n"))

(define (make-item str)
  (let* ((filename (gabc-filename str))
         (full-gabc (string-append "name: gabc test example;\n%%\n" str)))
    (call-with-output-file filename (cut put-string <> full-gabc))
    (system (string-append "gregorio " filename))
    (item-template str filename)))

(define gabc-dir "tmp-gabc")

(define (gabc-filename gabc)
  (let* ((state (gnutls:make-hash gnutls:digest/md5))
         (gabc-hash
          (begin
            (gnutls:hash! state (string->utf8 gabc))
            (string-replace-substring
             (gnutls:base64-encode (gnutls:hash-output state))
             "/" "_"))))
    (string-append gabc-dir "/" gabc-hash ".gabc")))

(define (process-input-from-port port output-port)
  (do ((line (read-line port) (read-line port))) ((eof-object? line))
    (cond
     ((string-prefix? "#" line)) ; do nothing
     ((= 0 (string-length (string-trim-both line)))) ; do nothing
     ((string-prefix? "=" line)
      (display (make-title (string-trim-both (substring line 1))) output-port)
      (newline output-port))
     (else
      (display (make-item line) output-port)
      (newline output-port) (newline output-port)))))



;; command line options
(define option-spec
  ;; --output-file -o FILE : write to a specified file instead of standard output
  '((output-file (single-char #\o) (value #t))
    ;; --compile -c : run lualatex
    (compile (single-char #\c) (value #f))
    ;; --paper -p : paper format passed to LaTeX \documentclass command
    (paper (single-char #\p) (value #t))))

(define options (getopt-long (command-line) option-spec #:stop-at-first-non-option #t))

(let* ((input-files (option-ref options '() '()))
       (compile (option-ref options 'compile #f))
       (output-file (option-ref options 'output-file (if compile "comparison.tex" #f)))
       (paper (option-ref options 'paper "a4paper"))
       (fw (if output-file
              (open-output-file output-file)
              (current-output-port))))
  (system (string-append "mkdir -p " gabc-dir))
  (display "% Generated by generate.scm" fw)
  (newline fw)
  (display (make-header paper) fw)
  (newline fw)
  (if (= 0 (length input-files))
      (process-input-from-port (current-input-port) fw)
      (for-each
       (cut call-with-input-file <>
            (cut process-input-from-port <> fw))
       input-files))
  (display footer fw)
  (newline fw)
  (when output-file
    (close-port fw)
    (when compile
      (system (string-append "lualatex -shell-escape " output-file)))))
